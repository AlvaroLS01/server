package com.comerzzia.bricodepot.backoffice.persistence.fidelizacion.colectivos;

import java.util.ArrayList;
import java.util.List;

public class CustomColectivoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public CustomColectivoExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> visualizacionAltasCriteria;

        protected List<Criterion> profesionalCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
            visualizacionAltasCriteria = new ArrayList<>();
            profesionalCriteria = new ArrayList<>();
        }

        public List<Criterion> getVisualizacionAltasCriteria() {
            return visualizacionAltasCriteria;
        }

        protected void addVisualizacionAltasCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            visualizacionAltasCriteria.add(new Criterion(condition, value, "com.comerzzia.core.util.mybatis.typehandlers.BooleanStringTypeHandler"));
            allCriteria = null;
        }

        protected void addVisualizacionAltasCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            visualizacionAltasCriteria.add(new Criterion(condition, value1, value2, "com.comerzzia.core.util.mybatis.typehandlers.BooleanStringTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getProfesionalCriteria() {
            return profesionalCriteria;
        }

        protected void addProfesionalCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            profesionalCriteria.add(new Criterion(condition, value, "com.comerzzia.core.util.mybatis.typehandlers.BooleanStringTypeHandler"));
            allCriteria = null;
        }

        protected void addProfesionalCriterion(String condition, Boolean value1, Boolean value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            profesionalCriteria.add(new Criterion(condition, value1, value2, "com.comerzzia.core.util.mybatis.typehandlers.BooleanStringTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || visualizacionAltasCriteria.size() > 0
                || profesionalCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(visualizacionAltasCriteria);
                allCriteria.addAll(profesionalCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andUidInstanciaIsNull() {
            addCriterion("uid_instancia is null");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaIsNotNull() {
            addCriterion("uid_instancia is not null");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaEqualTo(String value) {
            addCriterion("uid_instancia =", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaNotEqualTo(String value) {
            addCriterion("uid_instancia <>", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaGreaterThan(String value) {
            addCriterion("uid_instancia >", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaGreaterThanOrEqualTo(String value) {
            addCriterion("uid_instancia >=", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaLessThan(String value) {
            addCriterion("uid_instancia <", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaLessThanOrEqualTo(String value) {
            addCriterion("uid_instancia <=", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaLike(String value) {
            addCriterion("uid_instancia like", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaNotLike(String value) {
            addCriterion("uid_instancia not like", value, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaIn(List<String> values) {
            addCriterion("uid_instancia in", values, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaNotIn(List<String> values) {
            addCriterion("uid_instancia not in", values, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaBetween(String value1, String value2) {
            addCriterion("uid_instancia between", value1, value2, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andUidInstanciaNotBetween(String value1, String value2) {
            addCriterion("uid_instancia not between", value1, value2, "uidInstancia");
            return (Criteria) this;
        }

        public Criteria andCodColectivoIsNull() {
            addCriterion("cod_colectivo is null");
            return (Criteria) this;
        }

        public Criteria andCodColectivoIsNotNull() {
            addCriterion("cod_colectivo is not null");
            return (Criteria) this;
        }

        public Criteria andCodColectivoEqualTo(String value) {
            addCriterion("cod_colectivo =", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoNotEqualTo(String value) {
            addCriterion("cod_colectivo <>", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoGreaterThan(String value) {
            addCriterion("cod_colectivo >", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoGreaterThanOrEqualTo(String value) {
            addCriterion("cod_colectivo >=", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoLessThan(String value) {
            addCriterion("cod_colectivo <", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoLessThanOrEqualTo(String value) {
            addCriterion("cod_colectivo <=", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoLike(String value) {
            addCriterion("cod_colectivo like", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoNotLike(String value) {
            addCriterion("cod_colectivo not like", value, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoIn(List<String> values) {
            addCriterion("cod_colectivo in", values, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoNotIn(List<String> values) {
            addCriterion("cod_colectivo not in", values, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoBetween(String value1, String value2) {
            addCriterion("cod_colectivo between", value1, value2, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andCodColectivoNotBetween(String value1, String value2) {
            addCriterion("cod_colectivo not between", value1, value2, "codColectivo");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasIsNull() {
            addCriterion("visualizacion_altas is null");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasIsNotNull() {
            addCriterion("visualizacion_altas is not null");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasEqualTo(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas =", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasNotEqualTo(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas <>", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasGreaterThan(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas >", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasGreaterThanOrEqualTo(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas >=", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasLessThan(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas <", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasLessThanOrEqualTo(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas <=", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasLike(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas like", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasNotLike(Boolean value) {
            addVisualizacionAltasCriterion("visualizacion_altas not like", value, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasIn(List<Boolean> values) {
            addVisualizacionAltasCriterion("visualizacion_altas in", values, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasNotIn(List<Boolean> values) {
            addVisualizacionAltasCriterion("visualizacion_altas not in", values, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasBetween(Boolean value1, Boolean value2) {
            addVisualizacionAltasCriterion("visualizacion_altas between", value1, value2, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andVisualizacionAltasNotBetween(Boolean value1, Boolean value2) {
            addVisualizacionAltasCriterion("visualizacion_altas not between", value1, value2, "visualizacionAltas");
            return (Criteria) this;
        }

        public Criteria andProfesionalIsNull() {
            addCriterion("profesional is null");
            return (Criteria) this;
        }

        public Criteria andProfesionalIsNotNull() {
            addCriterion("profesional is not null");
            return (Criteria) this;
        }

        public Criteria andProfesionalEqualTo(Boolean value) {
            addProfesionalCriterion("profesional =", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalNotEqualTo(Boolean value) {
            addProfesionalCriterion("profesional <>", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalGreaterThan(Boolean value) {
            addProfesionalCriterion("profesional >", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalGreaterThanOrEqualTo(Boolean value) {
            addProfesionalCriterion("profesional >=", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalLessThan(Boolean value) {
            addProfesionalCriterion("profesional <", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalLessThanOrEqualTo(Boolean value) {
            addProfesionalCriterion("profesional <=", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalLike(Boolean value) {
            addProfesionalCriterion("profesional like", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalNotLike(Boolean value) {
            addProfesionalCriterion("profesional not like", value, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalIn(List<Boolean> values) {
            addProfesionalCriterion("profesional in", values, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalNotIn(List<Boolean> values) {
            addProfesionalCriterion("profesional not in", values, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalBetween(Boolean value1, Boolean value2) {
            addProfesionalCriterion("profesional between", value1, value2, "profesional");
            return (Criteria) this;
        }

        public Criteria andProfesionalNotBetween(Boolean value1, Boolean value2) {
            addProfesionalCriterion("profesional not between", value1, value2, "profesional");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated do_not_delete_during_merge Mon Feb 20 08:19:50 CET 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table x_colectivos_tbl
     *
     * @mbg.generated Mon Feb 20 08:19:50 CET 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}